from _typeshed import Incomplete
from octoprint.filemanager import FileDestinations as FileDestinations
from octoprint.settings import settings as settings
from octoprint.util import deprecated as deprecated, natural_key as natural_key

def get_connection_options(): ...

class PrinterInterface:
    valid_axes: Incomplete
    valid_tool_regex: Incomplete
    valid_heater_regex: Incomplete
    valid_heater_regex_no_current: Incomplete
    @classmethod
    def get_connection_options(cls, *args, **kwargs): ...
    def connect(self, port: Incomplete | None = None, baudrate: Incomplete | None = None, profile: Incomplete | None = None, *args, **kwargs) -> None: ...
    def disconnect(self, *args, **kwargs) -> None: ...
    def get_transport(self, *args, **kwargs) -> None: ...
    def job_on_hold(self, blocking: bool = True, *args, **kwargs) -> None: ...
    def set_job_on_hold(self, value, blocking: bool = True, *args, **kwargs) -> None: ...
    def fake_ack(self, *args, **kwargs) -> None: ...
    def commands(self, commands, tags: Incomplete | None = None, force: bool = False, *args, **kwargs) -> None: ...
    def script(self, name, context: Incomplete | None = None, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def jog(self, axes, relative: bool = True, speed: Incomplete | None = None, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def home(self, axes, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def extrude(self, amount, speed: Incomplete | None = None, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def change_tool(self, tool, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def set_temperature(self, heater, value, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def set_temperature_offset(self, offsets: Incomplete | None = None, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def feed_rate(self, factor, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def flow_rate(self, factor, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def can_modify_file(self, path, sd, *args, **kwargs): ...
    def is_current_file(self, path, sd, *args, **kwargs): ...
    def select_file(self, path, sd, printAfterSelect: bool = False, pos: Incomplete | None = None, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def unselect_file(self, *args, **kwargs) -> None: ...
    def start_print(self, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def pause_print(self, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def resume_print(self, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def toggle_pause_print(self, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def cancel_print(self, tags: Incomplete | None = None, *args, **kwargs) -> None: ...
    def log_lines(self, *lines) -> None: ...
    def get_state_string(self, *args, **kwargs) -> None: ...
    def get_state_id(self, *args, **kwargs) -> None: ...
    def get_current_data(self, *args, **kwargs) -> None: ...
    def get_current_job(self, *args, **kwargs) -> None: ...
    def get_current_temperatures(self, *args, **kwargs) -> None: ...
    def get_temperature_history(self, *args, **kwargs) -> None: ...
    def get_current_connection(self, *args, **kwargs) -> None: ...
    def is_closed_or_error(self, *args, **kwargs) -> None: ...
    def is_operational(self, *args, **kwargs) -> None: ...
    def is_printing(self, *args, **kwargs) -> None: ...
    def is_cancelling(self, *args, **kwargs) -> None: ...
    def is_pausing(self, *args, **kwargs) -> None: ...
    def is_paused(self, *args, **kwargs) -> None: ...
    def is_error(self, *args, **kwargs) -> None: ...
    def is_ready(self, *args, **kwargs) -> None: ...
    def register_callback(self, callback, *args, **kwargs) -> None: ...
    def unregister_callback(self, callback, *args, **kwargs) -> None: ...
    def send_initial_callback(self, callback) -> None: ...
    @property
    def firmware_info(self) -> None: ...
    @property
    def error_info(self) -> None: ...

class PrinterCallback:
    def on_printer_add_log(self, data) -> None: ...
    def on_printer_add_message(self, data) -> None: ...
    def on_printer_add_temperature(self, data) -> None: ...
    def on_printer_received_registered_message(self, name, output) -> None: ...
    def on_printer_send_initial_data(self, data) -> None: ...
    def on_printer_send_current_data(self, data) -> None: ...

class UnknownScript(Exception):
    name: Incomplete
    def __init__(self, name, *args, **kwargs) -> None: ...

class InvalidFileLocation(Exception): ...
class InvalidFileType(Exception): ...
