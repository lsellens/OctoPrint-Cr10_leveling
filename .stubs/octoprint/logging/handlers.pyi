import logging
import logging.handlers
from _typeshed import Incomplete

class AsyncLogHandlerMixin(logging.Handler):
    def __init__(self, *args, **kwargs) -> None: ...
    def emit(self, record) -> None: ...
    def close(self) -> None: ...

class CleaningTimedRotatingFileHandler(logging.handlers.TimedRotatingFileHandler):
    def __init__(self, *args, **kwargs) -> None: ...

class OctoPrintLogHandler(AsyncLogHandlerMixin, CleaningTimedRotatingFileHandler):
    rollover_callbacks: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def registerRolloverCallback(cls, callback, *args, **kwargs) -> None: ...
    def doRollover(self) -> None: ...

class OctoPrintStreamHandler(AsyncLogHandlerMixin, logging.StreamHandler): ...

class TriggeredRolloverLogHandler(AsyncLogHandlerMixin, logging.handlers.RotatingFileHandler):
    do_rollover: bool
    suffix_template: str
    file_pattern: Incomplete
    @classmethod
    def arm_rollover(cls) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def shouldRollover(self, record): ...
    def getFilesToDelete(self): ...
    def cleanupFiles(self) -> None: ...
    stream: Incomplete
    def doRollover(self) -> None: ...

class SerialLogHandler(TriggeredRolloverLogHandler): ...
class PluginTimingsLogHandler(TriggeredRolloverLogHandler): ...
class TornadoLogHandler(CleaningTimedRotatingFileHandler): ...
class AuthLogHandler(CleaningTimedRotatingFileHandler): ...

class RecordingLogHandler(logging.Handler):
    def __init__(self, target: Incomplete | None = None, *args, **kwargs) -> None: ...
    def emit(self, record) -> None: ...
    def setTarget(self, target) -> None: ...
    def flush(self) -> None: ...
    def close(self) -> None: ...
    def __len__(self) -> int: ...

class CombinedLogHandler(logging.Handler):
    def __init__(self, *handlers) -> None: ...
    def setHandlers(self, *handlers) -> None: ...
    def handle(self, record) -> None: ...

class WrappingHandler(logging.Handler):
    handler: Incomplete
    def __init__(self, handler: Incomplete | None = None) -> None: ...
    def handle(self, record) -> None: ...
