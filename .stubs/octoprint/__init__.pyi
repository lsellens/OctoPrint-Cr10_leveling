from _typeshed import Incomplete

version_data: Incomplete
__version__: Incomplete
__branch__: Incomplete
__display_version__ = __version__
__revision__: Incomplete
UMASK: Incomplete
urllib3_ssl: bool
version_info: Incomplete

class FatalStartupError(Exception):
    cause: Incomplete
    def __init__(self, message, cause: Incomplete | None = None) -> None: ...

def init_platform(basedir, configfile, overlays: Incomplete | None = None, use_logging_file: bool = True, logging_file: Incomplete | None = None, logging_config: Incomplete | None = None, debug: bool = False, verbosity: int = 0, uncaught_logger: Incomplete | None = None, uncaught_handler: Incomplete | None = None, disable_color: bool = True, safe_mode: bool = False, ignore_blacklist: bool = False, after_preinit_logging: Incomplete | None = None, after_settings_init: Incomplete | None = None, after_logging: Incomplete | None = None, after_safe_mode: Incomplete | None = None, after_settings_valid: Incomplete | None = None, after_event_manager: Incomplete | None = None, after_connectivity_checker: Incomplete | None = None, after_plugin_manager: Incomplete | None = None, after_environment_detector: Incomplete | None = None): ...
def init_settings(basedir, configfile, overlays: Incomplete | None = None): ...
def preinit_logging(debug: bool = False, verbosity: int = 0, uncaught_logger: Incomplete | None = None, uncaught_handler: Incomplete | None = None): ...
def init_logging(settings, use_logging_file: bool = True, logging_file: Incomplete | None = None, default_config: Incomplete | None = None, debug: bool = False, verbosity: int = 0, uncaught_logger: Incomplete | None = None, uncaught_handler: Incomplete | None = None, disable_color: bool = True): ...
def octoprint_plugin_inject_factory(settings, components): ...
def settings_plugin_inject_factory(settings): ...
def init_settings_plugin_config_migration_and_cleanup(plugin_manager) -> None: ...
def init_webcam_compat_overlay(settings, plugin_manager) -> None: ...
def init_custom_events(plugin_manager) -> None: ...
def set_logging_config(config, debug, verbosity, uncaught_logger, uncaught_handler): ...
def init_pluginsystem(settings, safe_mode: bool = False, ignore_blacklist: bool = True, connectivity_checker: Incomplete | None = None): ...
def get_plugin_blacklist(settings, connectivity_checker: Incomplete | None = None): ...
def init_event_manager(settings): ...
def init_connectivity_checker(settings, event_manager): ...
def init_environment_detector(plugin_manager): ...
def main() -> None: ...
